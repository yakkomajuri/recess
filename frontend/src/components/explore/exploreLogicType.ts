// Generated by kea-typegen on Thu, 07 Mar 2024 20:23:58 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { PostData } from '../timeline/timelineLogic'

export interface exploreLogicType extends Logic {
    actionCreators: {
        loadUser: () => {
            type: 'load user (src.components.timeline.exploreLogic)'
            payload: any
        }
        loadExplorePosts: () => {
            type: 'load explore posts (src.components.timeline.exploreLogic)'
            payload: any
        }
        loadExplorePostsSuccess: (
            explorePosts: PostData,
            payload?: any
        ) => {
            type: 'load explore posts success (src.components.timeline.exploreLogic)'
            payload: {
                explorePosts: PostData
                payload?: any
            }
        }
        loadExplorePostsFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load explore posts failure (src.components.timeline.exploreLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'load user (src.components.timeline.exploreLogic)': 'loadUser'
        'load explore posts (src.components.timeline.exploreLogic)': 'loadExplorePosts'
        'load explore posts success (src.components.timeline.exploreLogic)': 'loadExplorePostsSuccess'
        'load explore posts failure (src.components.timeline.exploreLogic)': 'loadExplorePostsFailure'
    }
    actionTypes: {
        loadUser: 'load user (src.components.timeline.exploreLogic)'
        loadExplorePosts: 'load explore posts (src.components.timeline.exploreLogic)'
        loadExplorePostsSuccess: 'load explore posts success (src.components.timeline.exploreLogic)'
        loadExplorePostsFailure: 'load explore posts failure (src.components.timeline.exploreLogic)'
    }
    actions: {
        loadUser: () => void
        loadExplorePosts: () => void
        loadExplorePostsSuccess: (explorePosts: PostData, payload?: any) => void
        loadExplorePostsFailure: (error: string, errorObject?: any) => void
    }
    asyncActions: {
        loadUser: () => Promise<any>
        loadExplorePosts: () => Promise<any>
        loadExplorePostsSuccess: (explorePosts: PostData, payload?: any) => Promise<any>
        loadExplorePostsFailure: (error: string, errorObject?: any) => Promise<any>
    }
    defaults: {
        explorePosts: PostData
        explorePostsLoading: boolean
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['src', 'components', 'timeline', 'exploreLogic']
    pathString: 'src.components.timeline.exploreLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        explorePosts: PostData
        explorePostsLoading: boolean
    }
    reducers: {
        explorePosts: (state: PostData, action: any, fullState: any) => PostData
        explorePostsLoading: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        explorePosts: PostData
        explorePostsLoading: boolean
    }
    selectors: {
        explorePosts: (state: any, props?: any) => PostData
        explorePostsLoading: (state: any, props?: any) => boolean
    }
    sharedListeners: {}
    values: {
        explorePosts: PostData
        explorePostsLoading: boolean
    }
    _isKea: true
    _isKeaWithKey: false
}
